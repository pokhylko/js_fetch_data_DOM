{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","json","getPhones","Promise","resolve","reject","setTimeout","phonesList","getPhonesDetails","IDs","result","console","log","error","warn","phoneDetails","name","phonesWithDetails","resultList","all","map","detailedInfo","id","baseInfo","Object","assign"],"mappings":";AAAA,aAIA,IAAMA,EAAW,4DAEXC,EAAU,SAACC,GACRC,OAAAA,MAASH,GAAAA,OAAAA,GAAWE,OAAAA,IACxBE,KAAK,SAAAC,GACGA,OAAAA,EAASC,UAItB,SAASC,IASA,OAAA,IAAIC,QARM,SAACC,EAASC,GACzBD,EAAQR,EAAQ,iBAEhBU,WAAW,WACTD,EAAO,UACN,OAMP,IAAME,EAAaL,IAQnB,SAASM,EAAiBC,GAKjB,OAAA,IAAIN,QAJM,SAACC,GAChBA,EAAQR,EAAmBa,WAAAA,OAAAA,EAApB,aARXF,EACGR,KACC,SAAAW,GAAUC,OAAAA,QAAQC,IAAIF,IACtB,SAAAG,GAASF,OAAAA,QAAQG,KAAKD,KAW1B,IAAIE,EAAeP,EAAiB,iBAEpCO,EACGhB,KACC,SAAAW,GAAUC,OAAAA,QAAQC,IAAOF,GAAAA,OAAAA,EAAOM,KAASN,KAAAA,IACzC,SAAAG,GAASF,OAAAA,QAAQG,KAAKD,KAG1B,IAAMI,EAAoBf,IAE1Be,EACGlB,KACC,SAAAmB,GAAcf,OAAAA,QAAQgB,IACpBD,EAAWE,IAAI,SAAAC,GAGNN,OAFPA,EAAeP,EAAiBa,EAAaC,KAG1CvB,KAAK,SAAAwB,GAAYC,OAAAA,OAAOC,OAAOF,EAAUF,QAG7CtB,KAAK,SAAAW,GAAUC,OAAAA,QAAQC,IAAIF","file":"main.3119ab4b.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n/* eslint-disable no-console */\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst request = (url) => {\n  return fetch(`${BASE_URL}${url}`) /* eslint-disable-line */\n    .then(response => {\n      return response.json();\n    });\n};\n\nfunction getPhones() {\n  const resolver = (resolve, reject) => {\n    resolve(request('/phones.json'));\n\n    setTimeout(() => {\n      reject('Error');\n    }, 5000);\n  };\n\n  return new Promise(resolver);\n}\n\nconst phonesList = getPhones();\n\nphonesList\n  .then(\n    result => console.log(result),\n    error => console.warn(error)\n  );\n\nfunction getPhonesDetails(IDs) {\n  const resolver = (resolve) => {\n    resolve(request(`/phones/${IDs}.json`));\n  };\n\n  return new Promise(resolver);\n}\n\nlet phoneDetails = getPhonesDetails('motorola-xoom');\n\nphoneDetails\n  .then(\n    result => console.log(`${result.name}:`, result),\n    error => console.warn(error)\n  );\n\nconst phonesWithDetails = getPhones();\n\nphonesWithDetails\n  .then(\n    resultList => Promise.all(\n      resultList.map(detailedInfo => {\n        phoneDetails = getPhonesDetails(detailedInfo.id);\n\n        return phoneDetails\n          .then(baseInfo => Object.assign(baseInfo, detailedInfo));\n      })\n    )\n      .then(result => console.log(result))\n  );\n"]}